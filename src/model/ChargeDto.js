/**
 * elepay API リファレンス
 * elepay APIはRESTをベースに構成された決済APIです。支払い処理、返金処理など、決済に関わる運用における様々なことができます。 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentMethodType from './PaymentMethodType';
import RefundExtDto from './RefundExtDto';

/**
 * The ChargeDto model module.
 * @module model/ChargeDto
 * @version 1.0
 */
class ChargeDto {
    /**
     * Constructs a new <code>ChargeDto</code>.
     * 支払いオブジェクト
     * @alias module:model/ChargeDto
     */
    constructor() { 
        
        ChargeDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChargeDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChargeDto} obj Optional instance to populate.
     * @return {module:model/ChargeDto} The populated <code>ChargeDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChargeDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('liveMode')) {
                obj['liveMode'] = ApiClient.convertToType(data['liveMode'], 'Boolean');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = PaymentMethodType.constructFromObject(data['paymentMethod']);
            }
            if (data.hasOwnProperty('orderNo')) {
                obj['orderNo'] = ApiClient.convertToType(data['orderNo'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('extra')) {
                obj['extra'] = ApiClient.convertToType(data['extra'], {'String': Object});
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': Object});
            }
            if (data.hasOwnProperty('clientIp')) {
                obj['clientIp'] = ApiClient.convertToType(data['clientIp'], 'String');
            }
            if (data.hasOwnProperty('paid')) {
                obj['paid'] = ApiClient.convertToType(data['paid'], 'Boolean');
            }
            if (data.hasOwnProperty('refunded')) {
                obj['refunded'] = ApiClient.convertToType(data['refunded'], 'Boolean');
            }
            if (data.hasOwnProperty('refunds')) {
                obj['refunds'] = RefundExtDto.constructFromObject(data['refunds']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('credential')) {
                obj['credential'] = ApiClient.convertToType(data['credential'], 'String');
            }
            if (data.hasOwnProperty('paidTime')) {
                obj['paidTime'] = ApiClient.convertToType(data['paidTime'], 'Number');
            }
            if (data.hasOwnProperty('refundTime')) {
                obj['refundTime'] = ApiClient.convertToType(data['refundTime'], 'Number');
            }
            if (data.hasOwnProperty('expiryTime')) {
                obj['expiryTime'] = ApiClient.convertToType(data['expiryTime'], 'Number');
            }
            if (data.hasOwnProperty('settleTime')) {
                obj['settleTime'] = ApiClient.convertToType(data['settleTime'], 'Number');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Charge ID
 * @member {String} id
 */
ChargeDto.prototype['id'] = undefined;

/**
 * 対象種類の表記
 * @member {String} object
 * @default 'charge'
 */
ChargeDto.prototype['object'] = 'charge';

/**
 * 本番モードかどうか - false テストモード - true 本番モード 
 * @member {Boolean} liveMode
 */
ChargeDto.prototype['liveMode'] = undefined;

/**
 * 支払い金額
 * @member {Number} amount
 */
ChargeDto.prototype['amount'] = undefined;

/**
 * 通貨コード (ISO_4217)
 * @member {String} currency
 * @default 'JPY'
 */
ChargeDto.prototype['currency'] = 'JPY';

/**
 * @member {module:model/PaymentMethodType} paymentMethod
 */
ChargeDto.prototype['paymentMethod'] = undefined;

/**
 * お客様システム側のオーダーNo、例えば注文番号、決済IDなど
 * @member {String} orderNo
 */
ChargeDto.prototype['orderNo'] = undefined;

/**
 * 支払い説明文
 * @member {String} description
 */
ChargeDto.prototype['description'] = undefined;

/**
 * 支払いエキストラデータ
 * @member {Object.<String, Object>} extra
 */
ChargeDto.prototype['extra'] = undefined;

/**
 * 支払いメタデータ
 * @member {Object.<String, Object>} metadata
 */
ChargeDto.prototype['metadata'] = undefined;

/**
 * Client IP アドレス
 * @member {String} clientIp
 */
ChargeDto.prototype['clientIp'] = undefined;

/**
 * 支払い済みフラグ
 * @member {Boolean} paid
 */
ChargeDto.prototype['paid'] = undefined;

/**
 * 返金済みフラグ
 * @member {Boolean} refunded
 */
ChargeDto.prototype['refunded'] = undefined;

/**
 * @member {module:model/RefundExtDto} refunds
 */
ChargeDto.prototype['refunds'] = undefined;

/**
 * 支払い状態
 * @member {String} status
 */
ChargeDto.prototype['status'] = undefined;

/**
 * Client SDK の認証情報
 * @member {String} credential
 */
ChargeDto.prototype['credential'] = undefined;

/**
 * 支払い時間のUTCタイムスタンプ
 * @member {Number} paidTime
 */
ChargeDto.prototype['paidTime'] = undefined;

/**
 * 返金時間のUTCタイムスタンプ
 * @member {Number} refundTime
 */
ChargeDto.prototype['refundTime'] = undefined;

/**
 * 支払い請求有効時間のUTCタイムスタンプ
 * @member {Number} expiryTime
 */
ChargeDto.prototype['expiryTime'] = undefined;

/**
 * 支払い締め時間のUTCタイムスタンプ
 * @member {Number} settleTime
 */
ChargeDto.prototype['settleTime'] = undefined;

/**
 * 支払い新規時間のUTCタイムスタンプ
 * @member {Number} createTime
 */
ChargeDto.prototype['createTime'] = undefined;






export default ChargeDto;

